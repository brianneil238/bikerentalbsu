"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/libreoffice-convert";
exports.ids = ["vendor-chunks/libreoffice-convert"];
exports.modules = {

/***/ "(rsc)/./node_modules/libreoffice-convert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/libreoffice-convert/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst url = __webpack_require__(/*! url */ \"url\");\nconst async = __webpack_require__(/*! async */ \"(rsc)/./node_modules/async/dist/async.mjs\");\nconst tmp = __webpack_require__(/*! tmp */ \"(rsc)/./node_modules/tmp/lib/tmp.js\");\nconst { execFile } = __webpack_require__(/*! child_process */ \"child_process\");\nconst convertWithOptions = (document, format, filter, options, callback)=>{\n    const tmpOptions = (options || {}).tmpOptions || {};\n    const asyncOptions = (options || {}).asyncOptions || {};\n    const execOptions = (options || {}).execOptions || {};\n    const fileName = (options || {}).fileName || \"source\";\n    const tempDir = tmp.dirSync({\n        prefix: \"libreofficeConvert_\",\n        unsafeCleanup: true,\n        ...tmpOptions\n    });\n    const installDir = tmp.dirSync({\n        prefix: \"soffice\",\n        unsafeCleanup: true,\n        ...tmpOptions\n    });\n    return async.auto({\n        soffice: (callback)=>{\n            let paths = (options || {}).sofficeBinaryPaths || [];\n            switch(process.platform){\n                case \"darwin\":\n                    paths = [\n                        ...paths,\n                        \"/Applications/LibreOffice.app/Contents/MacOS/soffice\"\n                    ];\n                    break;\n                case \"linux\":\n                    paths = [\n                        ...paths,\n                        \"/usr/bin/libreoffice\",\n                        \"/usr/bin/soffice\",\n                        \"/snap/bin/libreoffice\",\n                        \"/opt/libreoffice/program/soffice\",\n                        \"/opt/libreoffice7.6/program/soffice\"\n                    ];\n                    break;\n                case \"win32\":\n                    paths = [\n                        ...paths,\n                        path.join(process.env[\"PROGRAMFILES(X86)\"] || \"\", \"LIBREO~1/program/soffice.exe\"),\n                        path.join(process.env[\"PROGRAMFILES(X86)\"] || \"\", \"LibreOffice/program/soffice.exe\"),\n                        path.join(process.env.PROGRAMFILES_X86 || \"\", \"LibreOffice/program/soffice.exe\"),\n                        path.join(process.env.PROGRAMFILES || \"\", \"LibreOffice/program/soffice.exe\"),\n                        process.env.LIBRE_OFFICE_EXE || \"\",\n                        \"C:/Program Files/LibreOffice/program/soffice.exe\"\n                    ];\n                    break;\n                default:\n                    return callback(new Error(`Operating system not yet supported: ${process.platform}`));\n            }\n            return async.filter(paths, (filePath, callback)=>fs.access(filePath, (err)=>callback(null, !err)), (err, res)=>{\n                if (res.length === 0) {\n                    return callback(new Error(\"Could not find soffice binary\"));\n                }\n                return callback(null, res[0]);\n            });\n        },\n        saveSource: (callback)=>fs.writeFile(path.join(tempDir.name, fileName), document, callback),\n        convert: [\n            \"soffice\",\n            \"saveSource\",\n            (results, callback)=>{\n                let filterParam = filter?.length ? `:${filter}` : \"\";\n                let fmt = !(filter ?? \"\").includes(\" \") ? `${format}${filterParam}` : `\"${format}${filterParam}\"`;\n                let args = [];\n                args.push(`-env:UserInstallation=${url.pathToFileURL(installDir.name)}`);\n                args.push(\"--headless\");\n                args.push(\"--convert-to\");\n                args.push(fmt);\n                args.push(\"--outdir\");\n                args.push(tempDir.name);\n                args.push(path.join(tempDir.name, fileName));\n                return execFile(results.soffice, args, execOptions, callback);\n            }\n        ],\n        loadDestination: [\n            \"convert\",\n            (results, callback)=>async.retry({\n                    times: asyncOptions.times || 3,\n                    interval: asyncOptions.interval || 200\n                }, (callback)=>fs.readFile(path.join(tempDir.name, `${fileName}.${format.split(\":\")[0]}`), callback), callback)\n        ]\n    }).then((res)=>{\n        return callback(null, res.loadDestination);\n    }).catch((err)=>{\n        return callback(err);\n    }).finally(()=>{\n        tempDir.removeCallback();\n        installDir.removeCallback();\n    });\n};\nconst convert = (document, format, filter, callback)=>{\n    return convertWithOptions(document, format, filter, {}, callback);\n};\nmodule.exports = {\n    convert,\n    convertWithOptions\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/libreoffice-convert/index.js\n");

/***/ })

};
;